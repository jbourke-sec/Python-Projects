# Generated by Django 3.2.9 on 2022-02-28 15:28

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('vulnApp', 'default_playbook'),
    ]

    operations = [
        migrations.CreateModel(
            name='asset',
            fields=[
                ('assetid', models.AutoField(auto_created=True, primary_key=True, serialize=False, unique=True)),
                ('cpe', models.CharField(max_length=20)),
                ('risk', models.CharField(max_length=20)),
                ('baseSLA', models.IntegerField(blank=True, null=True)),
                ('category', models.CharField(max_length=30)),
                ('hostname', models.CharField(blank=True, max_length=100, null=True)),
                ('tags', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='playbook',
            fields=[
                ('playbookid', models.AutoField(auto_created=True, primary_key=True, serialize=False, unique=True)),
                ('category', models.CharField(default='Default', max_length=30)),
                ('patchacquirement', models.CharField(default='Patch Acquirement', max_length=30)),
                ('patchvalidation', models.CharField(default='Patch Validation', max_length=30)),
                ('verification', models.CharField(default='Patch Verification', max_length=30)),
                ('rollout', models.CharField(default='Patch Rollout', max_length=30)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='policy',
            fields=[
                ('policyid', models.AutoField(auto_created=True, primary_key=True, serialize=False, unique=True)),
                ('cpe', models.CharField(blank=True, max_length=20, null=True)),
                ('confidentialityreq', models.CharField(choices=[('High', 'High Requirement'), ('Medium', 'Medium Requirement'), ('Low', 'Low Requirement'), ('Not Defined', 'Not Defined')], default='Not Defined', max_length=20)),
                ('integrityreq', models.CharField(choices=[('High', 'High Requirement'), ('Medium', 'Medium Requirement'), ('Low', 'Low Requirement'), ('Not Defined', 'Not Defined')], default='Not Defined', max_length=20)),
                ('availabilityreq', models.CharField(choices=[('High', 'High Requirement'), ('Medium', 'Medium Requirement'), ('Low', 'Low Requirement'), ('Not Defined', 'Not Defined')], default='Not Defined', max_length=20)),
                ('category', models.CharField(blank=True, max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='scan',
            fields=[
                ('scanid', models.AutoField(auto_created=True, primary_key=True, serialize=False, unique=True)),
                ('scanScope', models.CharField(max_length=100)),
                ('timeToStart', models.DateTimeField()),
                ('userId', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='vulnerability',
            fields=[
                ('vulnid', models.AutoField(auto_created=True, primary_key=True, serialize=False, unique=True)),
                ('threat', models.TextField(blank=True, null=True)),
                ('cve', models.CharField(max_length=150, unique=True)),
                ('cpe', models.TextField(blank=True, null=True)),
                ('risk', models.CharField(max_length=20)),
                ('baseSLA', models.TimeField(blank=True, null=True)),
                ('cwe', models.CharField(blank=True, max_length=20, null=True)),
                ('mav', models.CharField(choices=[('Network', 'Network'), ('Adjacent Network', 'Adjacent Network'), ('Local', 'Local'), ('Physical', 'Physical')], default='Network', max_length=20)),
                ('mac', models.CharField(choices=[('High', 'High Requirement'), ('Low', 'Low Requirement'), ('Not Defined', 'Not Defined')], default='Not Defined', max_length=20)),
                ('mpr', models.CharField(choices=[('High', 'High Requirement'), ('Low', 'Low Requirement'), ('None', 'None'), ('Not Defined', 'Not Defined')], default='Not Defined', max_length=20)),
                ('mui', models.CharField(choices=[('Required', 'Required'), ('None', 'None'), ('Not Defined', 'Not Defined')], default='Not Defined', max_length=20)),
                ('ms', models.CharField(choices=[('Changed', 'High Requirement'), ('Unchanged', 'Medium Requirement'), ('Not Defined', 'Not Defined')], default='Not Defined', max_length=20)),
                ('mc', models.CharField(choices=[('High', 'High Requirement'), ('Low', 'Low Requirement'), ('None', 'None'), ('Not Defined', 'Not Defined')], default='Not Defined', max_length=20)),
                ('mi', models.CharField(choices=[('High', 'High Requirement'), ('Low', 'Low Requirement'), ('None', 'None'), ('Not Defined', 'Not Defined')], default='Not Defined', max_length=20)),
                ('ma', models.CharField(choices=[('High', 'High Requirement'), ('Low', 'Low Requirement'), ('None', 'None'), ('Not Defined', 'Not Defined')], default='Not Defined', max_length=20)),
                ('rc', models.CharField(choices=[('Unknown', 'Unknown'), ('Reasonable', 'Reasonable'), ('Confirmed', 'Confirmed'), ('Not Defined', 'Not Defined')], default='Not Defined', max_length=20)),
                ('rl', models.CharField(choices=[('Unavailable', 'Unavailable'), ('Workaround', 'Workaround'), ('Temporary fix', 'Temporary fix'), ('Official fix', 'Official fix'), ('Not Defined', 'Not Defined')], default='Not Defined', max_length=20)),
                ('ecm', models.CharField(choices=[('High', 'High'), ('Functional exploit exists', 'Functional exploit exists'), ('Proof of concept code', 'Proof of concept code'), ('Unproven that exploit exists', 'Unproven that exploit exists'), ('Not Defined', 'Not Defined')], default='Not Defined', max_length=30)),
                ('description', models.TextField(blank=True, null=True)),
                ('dayZero', models.DateTimeField(blank=True, null=True)),
                ('assetid', models.ManyToManyField(blank=True, to='vulnApp.asset')),
            ],
        ),
        migrations.CreateModel(
            name='ticket',
            fields=[
                ('ticketNumber', models.AutoField(auto_created=True, primary_key=True, serialize=False, unique=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('validatedsummary', models.TextField(blank=True, null=True)),
                ('verifiedsummary', models.TextField(blank=True, null=True)),
                ('rolledsummary', models.TextField(blank=True, null=True)),
                ('progress', models.CharField(blank=True, max_length=20)),
                ('assignedTo', models.CharField(blank=True, default='unassigned', max_length=200)),
                ('group', models.CharField(blank=True, max_length=40, null=True)),
                ('timeStarted', models.DateTimeField(blank=True, null=True)),
                ('timePatchAquired', models.DateTimeField(blank=True, null=True)),
                ('timeValidated', models.DateTimeField(blank=True, null=True)),
                ('timeVerified', models.DateTimeField(blank=True, null=True)),
                ('timeRolledout', models.DateTimeField(blank=True, null=True)),
                ('timeClosed', models.DateTimeField(blank=True, null=True)),
                ('cve', models.CharField(max_length=15)),
                ('cvss', models.DecimalField(decimal_places=2, max_digits=4)),
                ('qa', models.TextField(blank=True, null=True)),
                ('sla', models.DateTimeField(blank=True, null=True)),
                ('exposure', models.TextField(blank=True, null=True)),
                ('threat', models.TextField(blank=True, null=True)),
                ('outcome', models.CharField(blank=True, max_length=20, null=True)),
                ('acquired', models.BooleanField(default=False)),
                ('validated', models.BooleanField(default=False)),
                ('verified', models.BooleanField(default=False)),
                ('rolledout', models.BooleanField(default=False)),
                ('enscore', models.CharField(blank=True, max_length=20, null=True)),
                ('iscbase', models.CharField(blank=True, max_length=20, null=True)),
                ('temporal', models.CharField(blank=True, max_length=20, null=True)),
                ('exploitScore', models.CharField(blank=True, max_length=20, null=True)),
                ('iscmodified', models.CharField(blank=True, max_length=20, null=True)),
                ('impactModScore', models.CharField(blank=True, max_length=20, null=True)),
                ('impactScore', models.CharField(blank=True, max_length=20, null=True)),
                ('environmentalScore', models.CharField(blank=True, max_length=20, null=True)),
                ('assets', models.ManyToManyField(blank=True, to='vulnApp.asset')),
                ('playbookid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='vulnApp.playbook')),
                ('vulnid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='vulnApp.vulnerability')),
            ],
        ),
        migrations.CreateModel(
            name='scanResult',
            fields=[
                ('resultId', models.AutoField(auto_created=True, primary_key=True, serialize=False, unique=True)),
                ('cve', models.CharField(max_length=15)),
                ('assetid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vulnApp.asset')),
                ('scanid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vulnApp.scan')),
            ],
        ),
        migrations.AddField(
            model_name='asset',
            name='policyid',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='vulnApp.policy'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(db_index=True, max_length=255, unique=True)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
